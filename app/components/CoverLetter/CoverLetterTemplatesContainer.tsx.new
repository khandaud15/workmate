import React, { useState, ChangeEvent } from 'react';
import MinimalCoverLetterTemplate from './MinimalCoverLetterTemplate';

interface CoverLetterTemplatesContainerProps {
  coverLetterData?: any;
  selectedTemplate?: string;
  isEditable?: boolean;
  onSelectTemplate?: (template: string) => void;
}

const CoverLetterTemplatesContainer: React.FC<CoverLetterTemplatesContainerProps> = ({
  coverLetterData,
  selectedTemplate = 'minimal',
  isEditable = false,
  onSelectTemplate
}) => {
  // This component will be expanded to include more templates in the future
  
  // Render the appropriate template based on the selection
  const renderSelectedTemplate = () => {
    switch (selectedTemplate) {
      case 'minimal':
      default:
        return (
          <div className="relative">
            <MinimalCoverLetterTemplate coverLetterData={coverLetterData} isEditable={isEditable} />
            {isEditable && (
              <div className="absolute top-4 right-4 flex flex-col items-center gap-2">
                <img src={applicantPhoto} alt="Applicant Photo" className="w-24 h-24 rounded-full object-cover border-2 border-blue-600 shadow-md"/>
                <input type="file" accept="image/*" id="photo-upload-input" className="hidden" onChange={handlePhotoUpload}/>
                <button
                  onClick={() => document.getElementById('photo-upload-input')?.click()}
                  className="px-3 py-1 bg-blue-500 text-white text-xs rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-200"
                >
                  Upload Photo
                </button>
              </div>
            )}
          </div>
        );
    }
  };

  // If we're in selection mode, show the template previews
  const [hoveredTemplate, setHoveredTemplate] = useState<string | null>(null);
  
  // State to hold the URL of the applicant's photo
  const [applicantPhoto, setApplicantPhoto] = useState<string>('https://placehold.co/120x120/E0E0E0/FFFFFF?text=Photo');

  /**
   * Handles the photo upload event.
   * Reads the selected file and updates the applicantPhoto state with its Data URL.
   * @param event The change event from the file input.
   */
  const handlePhotoUpload = (event: ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]; // Get the first selected file, if any

    if (file) {
      const reader = new FileReader();

      // Callback when the file has been successfully read
      reader.onload = (e: ProgressEvent<FileReader>) => {
        if (e.target?.result) {
          setApplicantPhoto(e.target.result as string); // Update state with the new photo URL
        }
      };

      // Read the file as a Data URL (base64 encoded string)
      reader.readAsDataURL(file);
    }
  };

  // Function to handle template selection
  const handleSelectTemplate = (template: string) => {
    if (onSelectTemplate) {
      onSelectTemplate(template);
    }
  };

  // If onSelectTemplate is provided, we're in template selection mode
  if (onSelectTemplate) {
    return (
      <div className="w-full">
        <div className="p-2 md:p-3 rounded-lg">
          <div className="mb-3 flex justify-end">
            <input type="file" accept="image/*" id="photo-upload-input" className="hidden" onChange={handlePhotoUpload}/>
            <button
              onClick={() => document.getElementById('photo-upload-input')?.click()}
              className="px-3 py-1 bg-blue-500 text-white text-sm rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-200 flex items-center gap-1"
            >
              <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clipRule="evenodd" />
              </svg>
              Upload Photo
            </button>
          </div>
          <div className="flex flex-col md:flex-row gap-4 justify-start max-w-full overflow-x-auto">
            {/* Minimal Template Preview */}
            <div 
              className={`template-preview-card flex-1 max-w-[240px] border-2 ${selectedTemplate === 'minimal' || hoveredTemplate === 'minimal' ? 'border-blue-500' : 'border-gray-400'} rounded-lg cursor-pointer transition-all duration-300`}
              onClick={() => handleSelectTemplate('minimal')}
              onMouseEnter={() => setHoveredTemplate('minimal')}
              onMouseLeave={() => setHoveredTemplate(null)}
            >
              <div className="template-preview bg-white rounded-t-lg overflow-hidden relative" style={{height: '290px'}}>
                {/* Header Section - Simplified but recognizable */}
                <div className="p-3 border-b border-gray-200 bg-white flex justify-between items-start">
                  <div className="mb-1">
                    <h3 className="text-[10px] font-bold text-gray-800">ALBERTO CAMPBELL</h3>
                    <p className="text-[8px] font-medium text-blue-600">Data Analyst Intern</p>
                  </div>
                  <div className="flex-shrink-0">
                    <img src={applicantPhoto} alt="Applicant" className="w-6 h-6 rounded-full object-cover border border-gray-300" />
                  </div>
                  <div className="flex flex-wrap gap-2 text-[7px] text-gray-600">
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.928.7L7.5 6H10a1 1 0 011 1v4a1 1 0 01-1 1H7.5l-1.428 2.3a1 1 0 01-.928.7H3a1 1 0 01-1-1V3z"/>
                      </svg>
                      (558) 333-1333
                    </div>
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                      </svg>
                      email@example.com
                    </div>
                  </div>
                </div>

                {/* Cover Letter Body - Clear and readable */}
                <div className="p-3 text-[8px] text-gray-800">
                  <h4 className="text-[9px] font-semibold mb-2 border-b pb-1 border-gray-200">COVER LETTER</h4>
                  <p className="mb-1">Dear Hiring Manager,</p>
                  
                  <p className="text-[8px] leading-tight mb-1">I am writing to express my interest in applying for the Data Analyst Intern position.</p>
                  <p className="text-[8px] leading-tight mb-1">My skills include data mining, AI, and project management.</p>
                  <p className="text-[8px] leading-tight mb-1">You will find me reliable and highly adaptable.</p>
                  
                  <p className="mb-1">Yours faithfully,</p>
                  <p className="font-semibold">Alberto Campbell</p>
                </div>
              </div>
              <div className="template-label bg-[#0f172a] text-center py-2 rounded-b-lg">
                <span className="text-white font-medium text-sm">Minimal</span>
              </div>
            </div>
            
            {/* Modern Template Preview */}
            <div 
              className={`template-preview-card flex-1 max-w-[240px] border-2 ${selectedTemplate === 'modern' || hoveredTemplate === 'modern' ? 'border-blue-500' : 'border-gray-400'} rounded-lg cursor-pointer transition-all duration-300`}
              onClick={() => handleSelectTemplate('modern')}
              onMouseEnter={() => setHoveredTemplate('modern')}
              onMouseLeave={() => setHoveredTemplate(null)}
            >
              <div className="template-preview bg-white rounded-t-lg overflow-hidden relative" style={{height: '290px'}}>
                {/* Header Section - Simplified but recognizable */}
                <div className="p-3 border-b border-gray-200 bg-white flex justify-between items-start">
                  <div className="mb-1">
                    <h3 className="text-[10px] font-bold text-gray-800">ALBERTO CAMPBELL</h3>
                    <p className="text-[8px] font-medium text-blue-600">Data Analyst Intern</p>
                  </div>
                  <div className="flex-shrink-0">
                    <img src={applicantPhoto} alt="Applicant" className="w-6 h-6 rounded-full object-cover border border-gray-300" />
                  </div>
                  <div className="flex flex-wrap gap-2 text-[7px] text-gray-600">
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.928.7L7.5 6H10a1 1 0 011 1v4a1 1 0 01-1 1H7.5l-1.428 2.3a1 1 0 01-.928.7H3a1 1 0 01-1-1V3z"/>
                      </svg>
                      (558) 333-1333
                    </div>
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                      </svg>
                      email@example.com
                    </div>
                  </div>
                </div>

                {/* Cover Letter Body - Clear and readable */}
                <div className="p-3 text-[8px] text-gray-800">
                  <h4 className="text-[9px] font-semibold mb-2 border-b pb-1 border-gray-200">COVER LETTER</h4>
                  <p className="mb-1">Dear Hiring Manager,</p>
                  
                  <p className="text-[8px] leading-tight mb-1">I am writing to express my interest in applying for the Data Analyst Intern position.</p>
                  <p className="text-[8px] leading-tight mb-1">My skills include data mining, AI, and project management.</p>
                  <p className="text-[8px] leading-tight mb-1">You will find me reliable and highly adaptable.</p>
                  
                  <p className="mb-1">Yours faithfully,</p>
                  <p className="font-semibold">Alberto Campbell</p>
                </div>
              </div>
              <div className="template-label bg-[#0f172a] text-center py-2 rounded-b-lg">
                <span className="text-white font-medium text-sm">Modern</span>
              </div>
            </div>

            {/* Teal Template Preview */}
            <div 
              className={`template-preview-card flex-1 max-w-[240px] border-2 ${selectedTemplate === 'teal' || hoveredTemplate === 'teal' ? 'border-blue-500' : 'border-gray-400'} rounded-lg cursor-pointer transition-all duration-300`}
              onClick={() => handleSelectTemplate('teal')}
              onMouseEnter={() => setHoveredTemplate('teal')}
              onMouseLeave={() => setHoveredTemplate(null)}
            >
              <div className="template-preview bg-white rounded-t-lg overflow-hidden relative" style={{height: '290px'}}>
                {/* Header Section - Simplified but recognizable */}
                <div className="p-3 border-b border-gray-200 bg-white flex justify-between items-start">
                  <div className="mb-1">
                    <h3 className="text-[10px] font-bold text-gray-800">ALBERTO CAMPBELL</h3>
                    <p className="text-[8px] font-medium text-blue-600">Data Analyst Intern</p>
                  </div>
                  <div className="flex-shrink-0">
                    <img src={applicantPhoto} alt="Applicant" className="w-6 h-6 rounded-full object-cover border border-gray-300" />
                  </div>
                  <div className="flex flex-wrap gap-2 text-[7px] text-gray-600">
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.928.7L7.5 6H10a1 1 0 011 1v4a1 1 0 01-1 1H7.5l-1.428 2.3a1 1 0 01-.928.7H3a1 1 0 01-1-1V3z"/>
                      </svg>
                      (558) 333-1333
                    </div>
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                      </svg>
                      email@example.com
                    </div>
                  </div>
                </div>

                {/* Cover Letter Body - Clear and readable */}
                <div className="p-3 text-[8px] text-gray-800">
                  <h4 className="text-[9px] font-semibold mb-2 border-b pb-1 border-gray-200">COVER LETTER</h4>
                  <p className="mb-1">Dear Hiring Manager,</p>
                  
                  <p className="text-[8px] leading-tight mb-1">I am writing to express my interest in applying for the Data Analyst Intern position.</p>
                  <p className="text-[8px] leading-tight mb-1">My skills include data mining, AI, and project management.</p>
                  <p className="text-[8px] leading-tight mb-1">You will find me reliable and highly adaptable.</p>
                  
                  <p className="mb-1">Yours faithfully,</p>
                  <p className="font-semibold">Alberto Campbell</p>
                </div>
              </div>
              <div className="template-label bg-[#0f172a] text-center py-2 rounded-b-lg">
                <span className="text-white font-medium text-sm">Teal</span>
              </div>
            </div>

            {/* Lexus Template Preview */}
            <div 
              className={`template-preview-card flex-1 max-w-[240px] border-2 ${selectedTemplate === 'lexus' || hoveredTemplate === 'lexus' ? 'border-blue-500' : 'border-gray-400'} rounded-lg cursor-pointer transition-all duration-300`}
              onClick={() => handleSelectTemplate('lexus')}
              onMouseEnter={() => setHoveredTemplate('lexus')}
              onMouseLeave={() => setHoveredTemplate(null)}
            >
              <div className="template-preview bg-white rounded-t-lg overflow-hidden relative" style={{height: '290px'}}>
                {/* Header Section - Simplified but recognizable */}
                <div className="p-3 border-b border-gray-200 bg-white flex justify-between items-start">
                  <div className="mb-1">
                    <h3 className="text-[10px] font-bold text-gray-800">ALBERTO CAMPBELL</h3>
                    <p className="text-[8px] font-medium text-blue-600">Data Analyst Intern</p>
                  </div>
                  <div className="flex-shrink-0">
                    <img src={applicantPhoto} alt="Applicant" className="w-6 h-6 rounded-full object-cover border border-gray-300" />
                  </div>
                  <div className="flex flex-wrap gap-2 text-[7px] text-gray-600">
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.928.7L7.5 6H10a1 1 0 011 1v4a1 1 0 01-1 1H7.5l-1.428 2.3a1 1 0 01-.928.7H3a1 1 0 01-1-1V3z"/>
                      </svg>
                      (558) 333-1333
                    </div>
                    <div className="flex items-center gap-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-2 w-2 text-gray-500" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                      </svg>
                      email@example.com
                    </div>
                  </div>
                </div>

                {/* Cover Letter Body - Clear and readable */}
                <div className="p-3 text-[8px] text-gray-800">
                  <h4 className="text-[9px] font-semibold mb-2 border-b pb-1 border-gray-200">COVER LETTER</h4>
                  <p className="mb-1">Dear Hiring Manager,</p>
                  
                  <p className="text-[8px] leading-tight mb-1">I am writing to express my interest in applying for the Data Analyst Intern position.</p>
                  <p className="text-[8px] leading-tight mb-1">My skills include data mining, AI, and project management.</p>
                  <p className="text-[8px] leading-tight mb-1">You will find me reliable and highly adaptable.</p>
                  
                  <p className="mb-1">Yours faithfully,</p>
                  <p className="font-semibold">Alberto Campbell</p>
                </div>
              </div>
              <div className="template-label bg-[#0f172a] text-center py-2 rounded-b-lg">
                <span className="text-white font-medium text-sm">Lexus</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // If not in selection mode and a template is selected, render the selected template
  if (!onSelectTemplate && selectedTemplate) {
    return (
      <div className="cover-letter-templates-container w-full max-w-[21cm] mx-auto bg-white shadow-lg rounded-xl overflow-hidden">
        {renderSelectedTemplate()}
      </div>
    );
  }
  
  // If not in selection mode and no template is selected, return null
  return null;
};

export default CoverLetterTemplatesContainer;
